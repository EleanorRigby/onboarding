Create a pipeline with a single job
### What?
Every great Concourse behemoth of the 21st century started in the same place as yours is about to: with an empty `pipeline.yml`. You can kick it off with as little as a single, manually-triggered job.

### How?
1. Set up a `jobs:` section
1. Define a job with a name and a [plan](http://concourse.ci/build-plans.html)
1. Give the job a task that you define in the pipeline itself (this is good to know how to do to test new configurations quickly).
1. "fly" your pipeline using the `fly` cli

### Expected Result
A job that always goes green. How idyllic.

### Resources
[Configuring a Job](http://concourse.ci/configuring-jobs.html)
[Build Plans](http://concourse.ci/build-plans.html)
[Pipeline Mechanics](http://concourse.ci/pipeline-mechanics.html)
L: concourse
---
Add git resource to pipeline
### What?
A  [resource](http://concourse.ci/concepts.html#resources) is any entity that can be checked for new versions, pulled down at a specific version, and/or pushed up to idempotently create new versions. A few of the usual suspects are [listed here](http://concourse.ci/resource-types.html). They include a number of ideas that you're used to thinking of in terms of versioning (`git resource`, `git-release resource`, `tracker resource`, etc.), but also a few that you might not be, like `time`.

The [`git resource`](https://github.com/concourse/git-resource) tracks the commits in a git repository and, though I have no numbers on this, I expect it's the most commonly used Concourse resource. And you can have one of your very own!

### How?
Set up a `git resource` that fetches the repo you created to house your Concourse code. It will be useful to have access to this once we add tasks and a Dockerfile that you'll want to reference in your pipeline. Move your inline task to a yaml file and either a Bash or Ruby script in that repo.

### Expected Result
A one job, one resource pipeline that is always green.

### Resources
[Pipeline Mechanics](http://concourse.ci/pipeline-mechanics.html)
[Common Concourse "resources"](http://concourse.ci/concepts.html#resources)
L: concourse
---
Add docker-image resource to pipeline
### What?
Another popular Concourse resource is [`docker-image`](https://github.com/concourse/docker-image-resource). It's very useful for creating a reproducible environment for your tests and builds with all of the dependencies a growing pipeline needs to succeed.

### How?
1. Create a simple Dockerfile
1. Upload it to the DockerHub registry (if you do not have an account, create one at this point)
1. Set up the `docker-image` resource to fetch it
1. Build the image and use it to do something cool

### Resources
[Docker-image resource repo](https://github.com/concourse/docker-image-resource)
[Docker Tutorial Series: writing a DockerFile](https://rominirani.com/docker-tutorial-series-writing-a-dockerfile-ce5746617cd)
- [ ] Create DockerFile
L: concourse
---
[RELEASE] Concourse â‡§
